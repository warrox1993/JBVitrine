[{"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\index.tsx":"1","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\serviceWorker.js":"2","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Products\\ListProducts\\ListProducts.tsx":"3","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\AuditLogs\\reducer.tsx":"4","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Products\\sagas.tsx":"5","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\AuditLogs\\AuditLogs.tsx":"6","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Files\\EditFile\\EditFile.tsx":"7","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\ViewUser\\ViewUser.tsx":"8","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Settings\\reducer.tsx":"9","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Auth\\actionTypes.tsx":"10","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\actionTypes.tsx":"11","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\actions.tsx":"12","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Settings\\ListConfigurationEntries\\ListConfigurationEntries.tsx":"13","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\App.tsx":"14","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\sagas.tsx":"15","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Products\\actions.tsx":"16","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Files\\UploadFile\\UploadFile.tsx":"17","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\components\\Star\\Star.tsx":"18","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\environments\\environment.dev.tsx":"19"},{"size":2575,"mtime":1614772948209,"results":"20","hashOfConfig":"21"},{"size":5227,"mtime":1588063183117,"results":"22","hashOfConfig":"21"},{"size":12079,"mtime":1646904289421,"results":"23","hashOfConfig":"21"},{"size":758,"mtime":1631593016210,"results":"24","hashOfConfig":"21"},{"size":2399,"mtime":1607843842886,"results":"25","hashOfConfig":"21"},{"size":1393,"mtime":1631595416086,"results":"26","hashOfConfig":"21"},{"size":9991,"mtime":1608893030156,"results":"27","hashOfConfig":"21"},{"size":15038,"mtime":1614772948208,"results":"28","hashOfConfig":"21"},{"size":3723,"mtime":1614772948207,"results":"29","hashOfConfig":"21"},{"size":119,"mtime":1607843658041,"results":"30","hashOfConfig":"21"},{"size":2426,"mtime":1607843885765,"results":"31","hashOfConfig":"21"},{"size":5118,"mtime":1607843879461,"results":"32","hashOfConfig":"21"},{"size":14035,"mtime":1632022228974,"results":"33","hashOfConfig":"21"},{"size":2251,"mtime":1631813223943,"results":"34","hashOfConfig":"21"},{"size":3639,"mtime":1607843905227,"results":"35","hashOfConfig":"21"},{"size":3065,"mtime":1607843819412,"results":"36","hashOfConfig":"21"},{"size":8118,"mtime":1608893697211,"results":"37","hashOfConfig":"21"},{"size":739,"mtime":1607849297066,"results":"38","hashOfConfig":"21"},{"size":374,"mtime":1631809764355,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"117z6s4",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\index.tsx",["78"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\serviceWorker.js",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Products\\ListProducts\\ListProducts.tsx",["79"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\AuditLogs\\reducer.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Products\\sagas.tsx",["80"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\AuditLogs\\AuditLogs.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Files\\EditFile\\EditFile.tsx",["81"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\ViewUser\\ViewUser.tsx",["82","83","84"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Settings\\reducer.tsx",["85"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Auth\\actionTypes.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\actionTypes.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\actions.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Settings\\ListConfigurationEntries\\ListConfigurationEntries.tsx",["86"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\App.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\sagas.tsx",["87","88","89","90"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Products\\actions.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Files\\UploadFile\\UploadFile.tsx",["91"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\components\\Star\\Star.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\environments\\environment.dev.tsx",[],{"ruleId":"92","severity":1,"message":"93","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"96","line":72,"column":2},{"ruleId":"92","severity":1,"message":"97","line":46,"column":11,"nodeType":"94","messageId":"95","endLine":46,"endColumn":19},{"ruleId":"92","severity":1,"message":"98","line":4,"column":17,"nodeType":"94","messageId":"95","endLine":4,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":157,"column":44,"nodeType":"101","messageId":"102","endLine":157,"endColumn":46},{"ruleId":"99","severity":1,"message":"103","line":239,"column":59,"nodeType":"101","messageId":"102","endLine":239,"endColumn":61},{"ruleId":"104","severity":1,"message":"105","line":389,"column":15,"nodeType":"106","endLine":394,"endColumn":17},{"ruleId":"92","severity":1,"message":"107","line":30,"column":7,"nodeType":"94","messageId":"95","endLine":30,"endColumn":36},{"ruleId":"92","severity":1,"message":"108","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":17},{"ruleId":"92","severity":1,"message":"97","line":45,"column":11,"nodeType":"94","messageId":"95","endLine":45,"endColumn":19},{"ruleId":"92","severity":1,"message":"97","line":67,"column":11,"nodeType":"94","messageId":"95","endLine":67,"endColumn":19},{"ruleId":"92","severity":1,"message":"97","line":80,"column":11,"nodeType":"94","messageId":"95","endLine":80,"endColumn":19},{"ruleId":"92","severity":1,"message":"97","line":92,"column":11,"nodeType":"94","messageId":"95","endLine":92,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":59,"column":27,"nodeType":"101","messageId":"102","endLine":59,"endColumn":29},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","Parsing error: Unexpected token. Did you mean `{'}'}` or `&rbrace;`?","'response' is assigned a value but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fetchConfigurationEntriesFail' is assigned a value but never used.","'NavLink' is defined but never used."]alse,\r\n        deleted: false,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n",["85","86"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Auth\\actionTypes.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\actionTypes.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Users\\actions.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Settings\\ListConfigurationEntries\\ListConfigurationEntries.tsx",["87"],"import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nimport * as actions from \"../actions\";\r\nimport { checkValidity } from \"../../../shared/utility\";\r\nimport axios from \"../axios\";\r\n\r\nclass ListConfigurationEntries extends Component<any, any> {\r\n  state = {\r\n    deleteModalOpen: false,\r\n    addUpdateModalOpen: false,\r\n    addUpdateFormSubmitted: false,\r\n    importExcelModalOpen: false,\r\n    importingFile: null as File | null,\r\n    importExcelFormSubmitted: false,\r\n    selectingEntry: {\r\n      id: \"\",\r\n      key: \"\",\r\n      value: \"\",\r\n      description: \"\",\r\n      isSensitive: false,\r\n    },\r\n    controls: {\r\n      key: {\r\n        validation: {\r\n          required: true,\r\n        },\r\n        error: {\r\n          required: false,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n      value: {\r\n        validation: {\r\n          required: true,\r\n        },\r\n        error: {\r\n          required: false,\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n      },\r\n    },\r\n    errorMessage: null,\r\n  };\r\n\r\n  fieldChanged = (event) => {\r\n    let value = event.target.value;\r\n\r\n    if (event.target.type === \"checkbox\") {\r\n      value = event.target.checked;\r\n    }\r\n\r\n    const selectingEntry = {\r\n      ...this.state.selectingEntry,\r\n      [event.target.name]: value,\r\n    };\r\n\r\n    this.checkFieldValidity(event.target.name, value);\r\n\r\n    this.setState({ selectingEntry: selectingEntry });\r\n  };\r\n\r\n  checkFieldValidity = (name, value) => {\r\n    const control = this.state.controls[name];\r\n\r\n    if (!control) return true;\r\n\r\n    const rules = control.validation;\r\n    const validationRs = checkValidity(value, rules);\r\n\r\n    this.setState((preState) => {\r\n      return {\r\n        controls: {\r\n          ...preState.controls,\r\n          [name]: {\r\n            ...preState.controls[name],\r\n            error: validationRs,\r\n            valid: validationRs.isValid,\r\n          },\r\n        },\r\n      };\r\n    });\r\n\r\n    return validationRs.isValid;\r\n  };\r\n\r\n  openDeleteModal = (entry) => {\r\n    this.setState({ deleteModalOpen: true, selectingEntry: entry });\r\n  };\r\n\r\n  deleteCanceled = () => {\r\n    this.setState({ deleteModalOpen: false, selectingEntry: null });\r\n  };\r\n\r\n  deleteConfirmed = () => {\r\n    this.props.deleteConfigurationEntry(this.state.selectingEntry);\r\n    this.setState({ deleteModalOpen: false, selectingEntry: null });\r\n  };\r\n\r\n  openAddModal = () => {\r\n    this.setState({ addUpdateModalOpen: true, selectingEntry: {} });\r\n  };\r\n\r\n  openUpdateModal = (entry) => {\r\n    this.setState({\r\n      addUpdateModalOpen: true,\r\n      selectingEntry: {\r\n        id: entry.id,\r\n        key: entry.key,\r\n        value: entry.isSensitive ? \"\" : entry.value,\r\n        description: entry.description,\r\n        isSensitive: entry.isSensitive,\r\n      },\r\n    });\r\n  };\r\n\r\n  addUpdateCanceled = () => {\r\n    this.setState({\r\n      addUpdateModalOpen: false,\r\n      selectingEntry: null,\r\n      addUpdateFormSubmitted: false,\r\n    });\r\n  };\r\n\r\n  addUpdateConfirmed = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ addUpdateFormSubmitted: true });\r\n\r\n    let isValid = true;\r\n    for (let fieldName in this.state.controls) {\r\n      isValid =\r\n        this.checkFieldValidity(\r\n          fieldName,\r\n          this.state.selectingEntry[fieldName]\r\n        ) && isValid;\r\n    }\r\n\r\n    if (isValid) {\r\n      this.props.saveConfigurationEntry(this.state.selectingEntry);\r\n      this.setState({ addUpdateModalOpen: false, selectingEntry: null });\r\n    }\r\n  };\r\n\r\n  formatDateTime = (value) => {\r\n    if (!value) return value;\r\n    var date = new Date(value);\r\n    return date.toLocaleDateString() + \" \" + date.toLocaleTimeString();\r\n  };\r\n\r\n  exportAsExcel = async () => {\r\n    const rs = await axios.get(\"/ExportAsExcel\", { responseType: \"blob\" });\r\n    const url = window.URL.createObjectURL(rs.data);\r\n    const element = document.createElement(\"a\");\r\n    element.href = url;\r\n    element.download = \"Settings.xlsx\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  };\r\n\r\n  openImportExcelModal = () => {\r\n    this.setState({\r\n      importExcelModalOpen: true,\r\n      importingFile: null,\r\n      importExcelFormSubmitted: false,\r\n    });\r\n  };\r\n\r\n  importExcelCanceled = () => {\r\n    this.setState({\r\n      importExcelModalOpen: false,\r\n      importingFile: null,\r\n      importExcelFormSubmitted: false,\r\n    });\r\n  };\r\n\r\n  fileChanged = (event) => {\r\n    this.setState({\r\n      importingFile: event.target.files.item(0),\r\n    });\r\n  };\r\n\r\n  importExcelConfirmed = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      importExcelFormSubmitted: true,\r\n    });\r\n    if (!this.state.importingFile) {\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append(\"formFile\", this.state.importingFile);\r\n    await axios.post(\"ImportExcel\", formData);\r\n    this.setState({\r\n      importExcelModalOpen: false,\r\n      importingFile: null,\r\n      importExcelFormSubmitted: false,\r\n    });\r\n\r\n    this.props.fetchConfigurationEntries();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchConfigurationEntries();\r\n  }\r\n\r\n  render() {\r\n    const rows = this.props.configurationEntries?.map((entry) => (\r\n      <tr key={entry.id}>\r\n        <td>{entry.key}</td>\r\n        <td>{entry.isSensitive ? \"******\" : entry.value}</td>\r\n        <td>{entry.description}</td>\r\n        <td>{this.formatDateTime(entry.updatedDateTime)}</td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.openUpdateModal(entry)}\r\n          >\r\n            Edit\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-danger\"\r\n            onClick={() => this.openDeleteModal(entry)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n    const table = this.props.configurationEntries ? (\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Key</th>\r\n            <th>Value</th>\r\n            <th>Description</th>\r\n            <th>Updated Time</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </table>\r\n    ) : null;\r\n\r\n    const deleteModal = (\r\n      <Modal show={this.state.deleteModalOpen} onHide={this.deleteCanceled}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Entry</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete\r\n          <strong> {this.state.selectingEntry?.key}</strong>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.deleteCanceled}>\r\n            No\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.deleteConfirmed}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n\r\n    const addUpdateModal = (\r\n      <Modal\r\n        show={this.state.addUpdateModalOpen && !this.props.saved}\r\n        onHide={this.addUpdateCanceled}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {!this.state.selectingEntry?.id ? \"Add\" : \"Update\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={this.addUpdateConfirmed}>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"key\" className=\"col-sm-3 col-form-label\">\r\n                Key\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  id=\"key\"\r\n                  name=\"key\"\r\n                  className={\r\n                    \"form-control \" +\r\n                    (this.state.addUpdateFormSubmitted &&\r\n                    !this.state.controls[\"key\"].valid\r\n                      ? \"is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                  value={this.state.selectingEntry?.key}\r\n                  onChange={(event) => this.fieldChanged(event)}\r\n                />\r\n                <span className=\"invalid-feedback\">\r\n                  {this.state.controls[\"key\"].error.required ? (\r\n                    <span>Enter a key</span>\r\n                  ) : null}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"value\" className=\"col-sm-3 col-form-label\">\r\n                Value\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  id=\"value\"\r\n                  name=\"value\"\r\n                  className={\r\n                    \"form-control \" +\r\n                    (this.state.addUpdateFormSubmitted &&\r\n                    !this.state.controls[\"value\"].valid\r\n                      ? \"is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                  value={this.state.selectingEntry?.value}\r\n                  onChange={(event) => this.fieldChanged(event)}\r\n                />\r\n                <span className=\"invalid-feedback\">\r\n                  {this.state.controls[\"value\"].error.required ? (\r\n                    <span>Enter a value</span>\r\n                  ) : null}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"description\" className=\"col-sm-3 col-form-label\">\r\n                Description\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  className=\"form-control\"\r\n                  value={this.state.selectingEntry?.description}\r\n                  onChange={(event) => this.fieldChanged(event)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label htmlFor=\"isSensitive\" className=\"col-sm-3 col-form-label\">\r\n                Sensitive\r\n              </label>\r\n              <div className=\"col-sm-9\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"isSensitive\"\r\n                  name=\"isSensitive\"\r\n                  checked={this.state.selectingEntry?.isSensitive}\r\n                  onChange={(event) => this.fieldChanged(event)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\"></label>\r\n              <div className=\"col-sm-9\">\r\n                <button className=\"btn btn-primary\">Save</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n\r\n    const importExcelModal = (\r\n      <Modal\r\n        show={this.state.importExcelModalOpen}\r\n        onHide={this.importExcelCanceled}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Import Excel</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={this.importExcelConfirmed}>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-12\">\r\n                <input\r\n                  id=\"importingFile\"\r\n                  type=\"file\"\r\n                  name=\"importingFile\"\r\n                  className={\r\n                    \"form-control \" +\r\n                    (this.state.importExcelFormSubmitted &&\r\n                    !this.state.importingFile\r\n                      ? \"is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                  onChange={this.fileChanged}\r\n                />\r\n                <span className=\"invalid-feedback\"> Select a file </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-12\" style={{ textAlign: \"center\" }}>\r\n                <button className=\"btn btn-primary\">Import</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            Settings\r\n            <div style={{ float: \"right\" }}>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.exportAsExcel}\r\n              >\r\n                Export as Excel\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => this.openAddModal()}\r\n              >\r\n                Add\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => this.openImportExcelModal()}\r\n              >\r\n                Import Excel\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <div className=\"table-responsive\">{table}</div>\r\n          </div>\r\n        </div>\r\n        {this.props.errorMessage ? (\r\n          <div className=\"alert alert-danger\">\r\n            Error: {this.props.errorMessage}\r\n          </div>\r\n        ) : null}\r\n        {deleteModal}\r\n        {addUpdateModal}\r\n        {importExcelModal}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    configurationEntries: state.configurationEntry.configurationEntries,\r\n    saved: state.configurationEntry.saved,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchConfigurationEntries: () =>\r\n      dispatch(actions.fetchConfigurationEntries()),\r\n    saveConfigurationEntry: (entry) =>\r\n      dispatch(actions.saveConfigurationEntry(entry)),\r\n    deleteConfigurationEntry: (entry) =>\r\n      dispatch(actions.deleteConfigurationEntry(entry)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListConfigurationEntries);\r\n","D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Auth\\reducer.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Files\\reducer.tsx",["88"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Products\\actionTypes.tsx",[],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Home\\Home.tsx",["89"],"D:\\Phong.NguyenDoan\\GitHub\\Practical.CleanArchitecture\\src\\UIs\\reactjs\\src\\containers\\Products\\AddProduct\\AddProduct.tsx",[],{"ruleId":"90","severity":1,"message":"91","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"94","line":72,"column":2},{"ruleId":"90","severity":1,"message":"95","line":46,"column":11,"nodeType":"92","messageId":"93","endLine":46,"endColumn":19},{"ruleId":"90","severity":1,"message":"96","line":4,"column":17,"nodeType":"92","messageId":"93","endLine":4,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":157,"column":44,"nodeType":"99","messageId":"100","endLine":157,"endColumn":46},{"ruleId":"97","severity":1,"message":"101","line":239,"column":59,"nodeType":"99","messageId":"100","endLine":239,"endColumn":61},{"ruleId":"102","severity":1,"message":"103","line":389,"column":15,"nodeType":"104","endLine":394,"endColumn":17},{"ruleId":"90","severity":1,"message":"105","line":30,"column":7,"nodeType":"92","messageId":"93","endLine":30,"endColumn":36},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"90","severity":1,"message":"110","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":17},{"ruleId":"90","severity":1,"message":"111","line":31,"column":7,"nodeType":"92","messageId":"93","endLine":31,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":15,"column":13,"nodeType":"104","endLine":19,"endColumn":15},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","Parsing error: Unexpected token. Did you mean `{'}'}` or `&rbrace;`?","'response' is assigned a value but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'fetchConfigurationEntriesFail' is assigned a value but never used.","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'NavLink' is defined but never used.","'fetchFilesFail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]