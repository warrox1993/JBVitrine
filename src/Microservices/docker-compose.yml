version: "3.6"
services:
    db:
        image: "mcr.microsoft.com/mssql/server:2017-latest"
        ports:
            - "1434:1433"
        environment:
            SA_PASSWORD: "sqladmin123!@#"
            MSSQL_PID: "Developer"
            ACCEPT_EULA: "Y"
    rabbitmq:
        image: "rabbitmq:3-management"
        ports:
          - "5672:5672"
          - "15672:15672"
    mailhog:
        image: mailhog/mailhog
        ports: 
          - 1025:1025 # smtp server
          - 8025:8025 # web ui
    auditlog-api:
        image: classifiedads.services.auditlog.api
        build:
          context: .
          dockerfile: ./Services.AuditLog/ClassifiedAds.Services.AuditLog.Api/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.AuditLog;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    auditlog-grpc:
        image: classifiedads.services.auditlog.grpc
        build:
          context: .
          dockerfile: ./Services.AuditLog/ClassifiedAds.Services.AuditLog.Grpc/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ASPNETCORE_URLS: "https://+"
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.AuditLog;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    configuration-api:
        image: classifiedads.services.configuration.api
        build:
          context: .
          dockerfile: ./Services.Configuration/ClassifiedAds.Services.Configuration.Api/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Configuration;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    identity-api:
        image: classifiedads.services.identity.api
        build:
          context: .
          dockerfile: ./Services.Identity/ClassifiedAds.Services.Identity.Api/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Identity;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    identity-authserver:
        image: classifiedads.services.identity.authserver
        build:
          context: ../IdentityServers/OpenIddict
          dockerfile: ./ClassifiedAds.IdentityServer/Dockerfile
        ports:
          - "9000:80"
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Identity;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          CookiePolicyOptions__IsEnabled: "true"
          CookiePolicyOptions__MinimumSameSitePolicy: "Lax"
          CookiePolicyOptions__Secure: "None"
    identity-grpc:
        image: classifiedads.services.identity.grpc
        build:
          context: .
          dockerfile: ./Services.Identity/ClassifiedAds.Services.Identity.Grpc/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ASPNETCORE_URLS: "https://+"
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Identity;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    notification-api:
        image: classifiedads.services.notification.api
        build:
          context: .
          dockerfile: ./Services.Notification/ClassifiedAds.Services.Notification.Api/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Notification;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Messaging__Provider: "RabbitMQ"
          Messaging__RabbitMQ__HostName: "rabbitmq"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    notification-background:
        image: classifiedads.services.notification.background
        build:
          context: .
          dockerfile: ./Services.Notification/ClassifiedAds.Services.Notification.Background/Dockerfile
        depends_on:
          - db
        environment:
          DOTNET_ENVIRONMENT: ${DOTNET_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Notification;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Messaging__Provider: "RabbitMQ"
          Messaging__RabbitMQ__HostName: "rabbitmq"
          Notification__Email__Provider: "SmtpClient"
          Notification__Email__SmtpClient__Host: "mailhog"
          Notification__Email__SmtpClient__Port: "1025"
          Notification__Sms__Provider: "Fake"
          Notification__Sms__Twilio__AccountSId: ""
          Notification__Sms__Twilio__AuthToken: ""
          Notification__Sms__Twilio__FromNumber: ""
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    notification-grpc:
        image: classifiedads.services.notification.grpc
        build:
          context: .
          dockerfile: ./Services.Notification/ClassifiedAds.Services.Notification.Grpc/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ASPNETCORE_URLS: "https://+"
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Notification;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Messaging__Provider: "RabbitMQ"
          Messaging__RabbitMQ__HostName: "rabbitmq"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    product-api:
        image: classifiedads.services.product.api
        build:
          context: .
          dockerfile: ./Services.Product/ClassifiedAds.Services.Product.Api/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Product;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    storage-api:
        image: classifiedads.services.storage.api
        build:
          context: .
          dockerfile: ./Services.Storage/ClassifiedAds.Services.Storage.Api/Dockerfile
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ConnectionStrings__ClassifiedAds: "Server=db;Database=ClassifiedAds.Microservices.Storage;User Id=sa;Password=sqladmin123!@#;MultipleActiveResultSets=true;Encrypt=False"
          Authentication__IdentityServer__Authority: "http://host.docker.internal:9000"
          Authentication__IdentityServer__RequireHttpsMetadata: "false"
          Messaging__Provider: "RabbitMQ"
          Messaging__RabbitMQ__HostName: "rabbitmq"
          Storage__Provider: "Local"
          Storage__Local__Path: "/files"
          Services__AuditLog__Grpc: ${Services__AuditLog__Grpc}
          Services__Identity__Grpc: ${Services__Identity__Grpc}
          Services__Notification__Grpc: ${Services__Notification__Grpc}
    webapi:
        image: classifiedads.gateways.webapi
        build:
          context: .
          dockerfile: ./Gateways.WebAPI/ClassifiedAds.Gateways.WebAPI/Dockerfile
        ports:
            - "9002:8080"
        depends_on:
          - db
        environment:
          ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
          ProxyProvider: "Ocelot"
          Ocelot__DefaultDownstreamScheme: "http"
          Ocelot__Routes__Products__Downstream: "http://product-api:8080"
          Ocelot__Routes__Files__Downstream: "http://storage-api:8080"
          Ocelot__Routes__AuditLogs__Downstream: "http://auditlog-api:8080"
          Ocelot__Routes__Users__Downstream: "http://identity-api:8080"
          Ocelot__Routes__Configurations__Downstream: "http://configuration-api:8080"
          Ocelot__Routes__Hubs__Downstream: "ws://notification-api:8080"
          Yarp__Clusters__Products__Destinations__destination1__Address: "http://product-api:8080"
          Yarp__Clusters__Files__Destinations__destination1__Address: "http://storage-api:8080"
          Yarp__Clusters__AuditLogs__Destinations__destination1__Address: "http://auditlog-api:8080"
          Yarp__Clusters__Users__Destinations__destination1__Address: "http://identity-api:8080"
          Yarp__Clusters__Configurations__Destinations__destination1__Address: "http://configuration-api:8080"
          Yarp__Clusters__Hubs__Destinations__destination1__Address: "http://notification-api:8080"
